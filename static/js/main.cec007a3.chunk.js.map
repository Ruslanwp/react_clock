{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","prevProps","prevState","clockName","this","props","console","log","date","toLocaleTimeString","React","Component","App","state","Date","isClockVisible","clockHandler","setState","timerID","setInterval","clearInterval","className","type","onClick","Math","ceil","random","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,EAAb,wKACE,SAAmBC,EAAWC,GACxBD,EAAUE,YAAcC,KAAKC,MAAMF,WACrCG,QAAQC,IAAR,qCACgCN,EAAUE,UAD1C,eAC0DC,KAAKC,MAAMF,UADrE,QAHN,oBASE,WAAU,IACAK,EAASJ,KAAKC,MAAdG,KAKR,OAFAF,QAAQC,IAAIC,EAAKC,sBAGf,2BAAID,EAAKC,0BAhBf,GAA2BC,IAAMC,WC2DlBC,G,kNAvDbC,MAAQ,CACNL,KAAM,IAAIM,KACVC,gBAAgB,EAChBZ,UAAW,I,EAaba,aAAe,kBACb,EAAKC,SAAS,CAAEF,gBAAiB,EAAKF,MAAME,kB,uDAX9C,WAAqB,IAAD,OAClBX,KAAKc,QAAUC,aAAY,WACzB,EAAKF,SAAS,CAAET,KAAM,IAAIM,SACzB,O,kCAGL,WACEM,cAAchB,KAAKc,W,oBAOrB,WAAU,IAAD,SACqCd,KAAKS,MAAzCL,EADD,EACCA,KAAMO,EADP,EACOA,eAAgBZ,EADvB,EACuBA,UAE9B,OACE,yBAAKkB,UAAU,OACb,2CACA,2CAEE,4BACEC,KAAK,SACLC,QAASnB,KAAKY,cAFhB,cAMA,4BACEM,KAAK,SACLC,QAASnB,KAAKY,cAFhB,cAMA,4BACEM,KAAK,SACLC,QAAS,kBACP,EAAKN,SAAS,CAAEd,UAAWqB,KAAKC,KAAqB,IAAhBD,KAAKE,cAH9C,oBASDX,GAAkB,kBAAC,EAAD,CAAOP,KAAMA,EAAML,UAAWA,S,GAlDvCO,IAAMC,YCDxBgB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cec007a3.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Clock extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.clockName !== this.props.clockName) {\n      console.log(\n        `The Clock was renamed from ${prevProps.clockName} to ${this.props.clockName}.`\n      );\n    }\n  }\n\n  render() {\n    const { date } = this.props;\n\n    // eslint-disable-next-line;\n    console.log(date.toLocaleTimeString());\n\n    return(\n      <p>{date.toLocaleTimeString()}</p>\n    )\n  }\n};\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    date: new Date(),\n    isClockVisible: true,\n    clockName: 33,\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  clockHandler = () => (\n    this.setState({ isClockVisible: !this.state.isClockVisible })\n  )\n\n  render() {\n    const { date, isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          <button\n            type=\"button\"\n            onClick={this.clockHandler}\n          >\n            Show Clock\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.clockHandler}\n          >\n            Hide Clock\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => (\n              this.setState({ clockName: Math.ceil(Math.random() * 100) })\n            )}\n          >\n            Set random name\n          </button>\n        </p>\n        {isClockVisible && <Clock date={date} clockName={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}