{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerID","setInterval","setState","prevProps","clockName","props","console","log","clearInterval","toLocaleTimeString","React","Component","App","isClockVisible","showClock","hideClock","generateName","Math","ceil","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,SACzB,OARP,gCAWE,SAAmBK,GACbA,EAAUC,YAAcL,KAAKM,MAAMD,WAErCE,QAAQC,IAAR,6CAEIJ,EAAUC,UAFd,eAE8BL,KAAKM,MAAMD,UAFzC,QAdN,kCAqBE,WACEI,cAAcT,KAAKC,WAtBvB,oBAyBE,WAAU,IACAH,EAASE,KAAKH,MAAdC,KAKR,OAFAS,QAAQC,IAAIV,EAAKY,sBAGf,4CAAkBZ,EAAKY,0BAhC7B,GAA2BC,IAAMC,WC8ClBC,G,kNA3CbhB,MAAQ,CACNiB,gBAAgB,EAChBT,UAAW,I,EAGbU,UAAY,kBAAM,EAAKZ,SAAS,CAAEW,gBAAgB,K,EAElDE,UAAY,kBAAM,EAAKb,SAAS,CAAEW,gBAAgB,K,EAElDG,aAAe,kBAAM,EAAKd,SACxB,CAAEE,UAAWa,KAAKC,KAAqB,IAAhBD,KAAKE,a,4CAG9B,WAAU,IAAD,EAC+BpB,KAAKH,MAAnCiB,EADD,EACCA,eAAgBT,EADjB,EACiBA,UAExB,OACE,yBAAKgB,UAAU,OACb,2CACA,4BACEC,KAAK,SACLC,QAASvB,KAAKe,WAFhB,cAMA,4BACEO,KAAK,SACLC,QAASvB,KAAKgB,WAFhB,cAMA,4BACEM,KAAK,SACLC,QAASvB,KAAKiB,cAFhB,mBAMCH,GAAkB,kBAAC,EAAD,CAAOT,UAAWA,S,GAtC3BM,IAAMC,YCDxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3786ff81.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.clockName !== this.props.clockName) {\n      /* eslint-disable-next-line no-console */\n      console.log(\n        `The Clock was renamed from \\\n        ${prevProps.clockName} to ${this.props.clockName}.`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    /* eslint-disable-next-line no-console */\n    console.log(date.toLocaleTimeString());\n\n    return (\n      <p>Current time: {date.toLocaleTimeString()}</p>\n    );\n  }\n}\n\nClock.propTypes = {\n  clockName: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 33,\n  }\n\n  showClock = () => this.setState({ isClockVisible: true });\n\n  hideClock = () => this.setState({ isClockVisible: false });\n\n  generateName = () => this.setState(\n    { clockName: Math.ceil(Math.random() * 100) },\n  );\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.generateName}\n        >\n          Set random name\n        </button>\n        {isClockVisible && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}